(()=>{"use strict";class t{constructor(t){this.value=t,this.next=null}}const e=new class{constructor(){this.head=null,this.tail=null}append(e){const n=new t(e);this.head?(this.tail.next=n,this.tail=n):(this.head=n,this.tail=n)}prepend(e){const n=new t(e);this.head?(n.next=this.head,this.head=n):(this.head=n,this.tail=n)}size(){let t=0,e=this.head;for(;!this.head;)t++,e=e.next;return t}head(){return this.head?this.head:null}tail(){return this.tail?this.tail:null}at(t){if(t<0)return null;if(this.head){let e=this.head,n=0;for(;n<t;)n++,e=e.next;return e||null}}pop(){if(!this.tail)return console.log("No item to pop"),null;const t=this.tail.value;if(this.head===this.tail)return this.head=null,this.tail=null,t;let e=this.head;for(;e.next!==this.tail;)e=e.next;return e.next=null,this.tail=e,t}contains(t){let e=this.head;for(;null!==e.next;){if(e.value===t)return!0;e=e.next}return!1}find(t){let e=this.head,n=0;for(;e;){if(e.value===t)return n;e=e.next,n++}return-1}toString(){let t="";if(this.head){let e=this.head;for(;e;){if(null===e.next)return t+"null";t+=`( ${e.value} ) -> `,e=e.next}return t}return null}insertAt(e,n){if(n<0)return null;const i=new t(e);if(0===n)return i.next=this.head,this.head=i,this.tail||(this.tail=i),!0;let l=this.head,h=0;for(;l&&h<n-1;)l=l.next,h++;return!!l&&(i.next=l.next,l.next=i,i.next||(this.tail=i),!0)}removeAt(t){if(t<0||!this.head)return null;if(0===t){const t=this.head.value;return this.head=this.head.next,this.head||(this.tail=null),t}let e=this.head,n=0;for(;e.next&&n<t-1;)e=e.next,n++;if(!e.next)return null;const i=e.next.value;return e.next=e.next.next,e.next||(this.tail=e),i}};e.append(1),e.append(2),e.append(3),e.prepend(0),e.insertAt(1.5,2),console.log("LinkedList:",e.toString()),e.removeAt(2),console.log("LinkedList after removal:",e.toString()),e.removeAt(0),console.log("LinkedList after removing head:",e.toString()),e.removeAt(2),console.log("LinkedList after removing tail:",e.toString())})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,